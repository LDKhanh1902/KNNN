package vn.DA_KNNN.View;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class SaleView extends JPanel {
    private static final long serialVersionUID = 1L;
    private JTextField searchField;
    private JTable bookTable, cartTable;
    private DefaultTableModel bookModel, cartModel;
    private JLabel totalPriceLabel;

    public SaleView() {
        setLayout(new BorderLayout(10, 10));

        // **🔎 Thanh Tìm Kiếm**
        JPanel searchPanel = new JPanel(new FlowLayout(FlowLayout.LEFT, 10, 10));
        searchPanel.add(new JLabel("🔎 Tìm kiếm sách:"));
        searchField = new JTextField(20);
        searchPanel.add(searchField);
        JButton searchButton = new JButton("Tìm");
        searchPanel.add(searchButton);
        add(searchPanel, BorderLayout.NORTH);

        // **📚 Danh sách Sách (Bảng)**
        String[] bookColumns = {"Tên sách", "Giá (VNĐ)"};
        bookModel = new DefaultTableModel(bookColumns, 0);
        bookTable = new JTable(bookModel);
        JScrollPane bookScrollPane = new JScrollPane(bookTable);
        add(bookScrollPane, BorderLayout.WEST);

        // **🛒 Giỏ Hàng (Bảng)**
        String[] cartColumns = {"Tên sách", "Giá (VNĐ)", "Số lượng", "Tổng giá", "Xóa"};
        cartModel = new DefaultTableModel(cartColumns, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return column == 2; // Chỉ cho phép chỉnh sửa số lượng
            }
        };
        cartTable = new JTable(cartModel);
        JScrollPane cartScrollPane = new JScrollPane(cartTable);
        add(cartScrollPane, BorderLayout.CENTER);

        // **💰 Tổng Tiền & Nút Thanh Toán**
        JPanel bottomPanel = new JPanel(new BorderLayout());
        JPanel totalPanel = new JPanel(new FlowLayout(FlowLayout.RIGHT, 10, 10));
        totalPriceLabel = new JLabel("💰 Tổng tiền: 0 VNĐ");
        totalPanel.add(totalPriceLabel);
        bottomPanel.add(totalPanel, BorderLayout.NORTH);

        JPanel buttonPanel = new JPanel(new FlowLayout(FlowLayout.RIGHT, 10, 10));
        JButton printInvoiceButton = new JButton("🖨️ Xuất Hóa Đơn");
        JButton payButton = new JButton("🏦 Thanh Toán");
        JButton refreshButton = new JButton("🔄 Làm Mới");
        buttonPanel.add(printInvoiceButton);
        buttonPanel.add(payButton);
        buttonPanel.add(refreshButton);
        bottomPanel.add(buttonPanel, BorderLayout.SOUTH);

        add(bottomPanel, BorderLayout.SOUTH);

        // **📑 Thêm Dữ Liệu Sách Mẫu**
        addSampleBooks();

        // **🎯 Xử lý sự kiện**
        searchButton.addActionListener(e -> searchBook());
        payButton.addActionListener(e -> processPayment());
        printInvoiceButton.addActionListener(e -> printInvoice());
        refreshButton.addActionListener(e -> resetCart());
        cartModel.addTableModelListener(e -> updateTotalPrice());

        // **🛒 Xử lý khi click "Thêm vào giỏ"**
        bookTable.getSelectionModel().addListSelectionListener(e -> {
            if (!e.getValueIsAdjusting()) {
                int selectedRow = bookTable.getSelectedRow();
                if (selectedRow != -1) {
                    String bookName = (String) bookModel.getValueAt(selectedRow, 0);
                    int price = (int) bookModel.getValueAt(selectedRow, 1);
                    addToCart(bookName, price, 1);
                }
            }
        });
    }

    /**
     * 📌 Thêm dữ liệu sách mẫu
     */
    private void addSampleBooks() {
        Object[][] books = {
            {"Harry Potter", 120000},
            {"Doraemon", 80000},
            {"Sherlock Holmes", 100000},
            {"Bí Ẩn Vũ Trụ", 150000},
            {"Lập Trình Java", 180000}
        };
        for (Object[] book : books) {
            bookModel.addRow(book);
        }
    }

    /**
     * 📌 Tìm kiếm sách
     */
    private void searchBook() {
        String keyword = searchField.getText().trim();
        if (keyword.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập từ khóa tìm kiếm!", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return;
        }

        boolean found = false;
        for (int i = 0; i < bookModel.getRowCount(); i++) {
            String bookName = (String) bookModel.getValueAt(i, 0);
            if (bookName.equalsIgnoreCase(keyword)) {
                found = true;
                addToCart(bookName, (int) bookModel.getValueAt(i, 1), 1);
                break;
            }
        }

        if (!found) {
            JOptionPane.showMessageDialog(this, "Không tìm thấy sách!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
        }
    }

    /**
     * 📌 Thêm sách vào giỏ hàng
     */
    private void addToCart(String bookName, int price, int quantity) {
        for (int i = 0; i < cartModel.getRowCount(); i++) {
            if (cartModel.getValueAt(i, 0).equals(bookName)) {
                int oldQuantity = (int) cartModel.getValueAt(i, 2);
                cartModel.setValueAt(oldQuantity + quantity, i, 2);
                updateTotalPrice();
                return;
            }
        }
        cartModel.addRow(new Object[]{bookName, price, quantity, price * quantity, "❌"});
        updateTotalPrice();
    }

    /**
     * 📌 Cập nhật tổng tiền
     */
    private void updateTotalPrice() {
        int total = 0;
        for (int i = 0; i < cartModel.getRowCount(); i++) {
            int price = (int) cartModel.getValueAt(i, 1);
            int quantity = (int) cartModel.getValueAt(i, 2);
            cartModel.setValueAt(price * quantity, i, 3);
            total += price * quantity;
        }
        totalPriceLabel.setText("💰 Tổng tiền: " + total + " VNĐ");
    }

    /**
     * 📌 Xử lý thanh toán
     */
    private void processPayment() {
        if (cartModel.getRowCount() == 0) {
            JOptionPane.showMessageDialog(this, "Giỏ hàng trống!", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return;
        }

        JOptionPane.showMessageDialog(this, "Thanh toán thành công!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
        cartModel.setRowCount(0);
        updateTotalPrice();
    }

    /**
     * 📌 Xuất hóa đơn (chỉ hiển thị thông báo)
     */
    private void printInvoice() {
        JOptionPane.showMessageDialog(this, "Hóa đơn đã được in!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
    }

    /**
     * 📌 Làm mới giỏ hàng
     */
    private void resetCart() {
        cartModel.setRowCount(0);
        updateTotalPrice();
    }

    /**
     * 📌 Chạy form bán sách (Hàm Main)
     */
    public static void main(String[] args) {
        SwingUtilities.invokeLater(() -> {
            JFrame frame = new JFrame("Hệ thống Bán Sách");
            frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
            frame.setSize(900, 600);
            frame.add(new SaleView());
            frame.setLocationRelativeTo(null);
            frame.setVisible(true);
        });
    }
}
