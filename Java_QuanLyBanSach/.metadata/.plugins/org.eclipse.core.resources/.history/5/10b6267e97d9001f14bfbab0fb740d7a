package vn.DA_KNNN.View;

import javax.swing.*;
import java.awt.*;
import java.util.Random;

// Class to draw the pie chart
class PieChartPaint extends JPanel {
    private final double[] values;
    private final Color[] colors;

    public PieChartPaint(double[] values) {
        this.values = values;
        this.colors = generateRandomColors(values.length);
    }

    // Generate random colors for the pie slices
    private Color[] generateRandomColors(int count) {
        Random random = new Random();
        Color[] colors = new Color[count];
        for (int i = 0; i < count; i++) {
            colors[i] = new Color(random.nextInt(256), random.nextInt(256), random.nextInt(256));
        }
        return colors;
    }

    @Override
    protected void paintComponent(Graphics g) {
        super.paintComponent(g);
        if (values == null || values.length == 0) return;

        Graphics2D g2d = (Graphics2D) g;
        g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);

        int width = getWidth();
        int height = getHeight();
        int diameter = Math.min(width, height) - 20;
        int x = (width - diameter) / 2;
        int y = (height - diameter) / 2;

        double total = calculateTotal(values);

        double currentAngle = 0;
        for (int i = 0; i < values.length; i++) {
            double sliceAngle = 360 * (values[i] / total);
            g2d.setColor(colors[i]);
            g2d.fillArc(x, y, diameter, diameter, (int) currentAngle, (int) sliceAngle);
            currentAngle += sliceAngle;
        }

        g2d.setColor(Color.BLACK);
        g2d.drawOval(x, y, diameter, diameter);
    }

    private double calculateTotal(double[] values) {
        double total = 0;
        for (double value : values) {
            total += value;
        }
        return total;
    }
}

// Main pie chart panel
class PieChart extends JPanel {
    public PieChart(String[] labels, double[] values) {
        setLayout(new BorderLayout());

        JLabel lblTitle = new JLabel("Biểu đồ loại sách", SwingConstants.CENTER);
        lblTitle.setFont(new Font("Tahoma", Font.BOLD, 16));
        add(lblTitle, BorderLayout.NORTH);

        PieChartPaint pieChartPanel = new PieChartPaint(values);
        pieChartPanel.setPreferredSize(new Dimension(300, 300));
        add(pieChartPanel, BorderLayout.CENTER);

        JPanel legendPanel = createLegendPanel(labels, values);
        add(legendPanel, BorderLayout.EAST);
    }

    private JPanel createLegendPanel(String[] labels, double[] values) {
        JPanel legendPanel = new JPanel();
        legendPanel.setLayout(new BoxLayout(legendPanel, BoxLayout.Y_AXIS));
        legendPanel.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));

        double total = calculateTotal(values);
        for (int i = 0; i < labels.length; i++) {
            String text = String.format("%s: %.2f%%", labels[i], (values[i] / total) * 100);
            JLabel label = new JLabel(text);
            label.setAlignmentX(Component.LEFT_ALIGNMENT);
            legendPanel.add(label);
            legendPanel.add(Box.createVerticalStrut(5));
        }

        return legendPanel;
    }

    private double calculateTotal(double[] values) {
        double total = 0;
        for (double value : values) {
            total += value;
        }
        return total;
    }
}

// Main application class
public class PieChartExample {
    public static void main(String[] args) {
        SwingUtilities.invokeLater(() -> {
            JFrame frame = new JFrame("Pie Chart With Legend");
            frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
            frame.setSize(600, 400);

            String[] labels = {"Sach A", "Sach B", "Sach C"};
            double[] values = {30, 20, 50};
            PieChart pieChart = new PieChart(labels, values);

            frame.add(pieChart);
            frame.setVisible(true);
        });
    }
}
