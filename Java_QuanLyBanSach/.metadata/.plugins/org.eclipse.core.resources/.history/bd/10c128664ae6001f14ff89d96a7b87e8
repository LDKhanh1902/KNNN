package vn.DA_KNNN.Components;

import javax.swing.*;
import javax.swing.border.Border;

import java.awt.*;
import java.util.Random;

// Class vẽ biểu đồ tròn
class PieChartPanel extends JPanel {
    private static final long serialVersionUID = 1L;
    private final double[] values;
    private final Color[] colors;
    private final String[] labels;

    public PieChartPanel(String[] labels, double[] values) {
        if (labels == null || values == null || labels.length != values.length || values.length == 0) {
            throw new IllegalArgumentException("Dữ liệu không hợp lệ!");
        }
        this.labels = labels;
        this.values = values;
        this.colors = generateRandomColors(values.length);
        setPreferredSize(new Dimension(400, 400));
    }

    private Color[] generateRandomColors(int count) {
        Random random = new Random();
        Color[] colors = new Color[count];
        for (int i = 0; i < count; i++) {
            colors[i] = new Color(random.nextInt(156) + 100, random.nextInt(156) + 100, random.nextInt(156) + 100);
        }
        return colors;
    }

    @Override
    protected void paintComponent(Graphics g) {
        super.paintComponent(g);
        Graphics2D g2 = (Graphics2D) g;
        g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
        
        int width = getWidth();
        int height = getHeight();
        int diameter = Math.min(width, height) - 100;
        int x = (width - diameter) / 2;
        int y = (height - diameter) / 2;

        double total = calculateTotal(values);
        double currentAngle = 0;

        for (int i = 0; i < values.length; i++) {
            double sliceAngle = 360.0 * (values[i] / total);
            g2.setColor(getColors()[i]);
            g2.fillArc(x, y, diameter, diameter, (int) Math.round(currentAngle), (int) Math.round(sliceAngle));
            currentAngle += sliceAngle;
        }

        g2.setColor(Color.BLACK);
        g2.drawOval(x, y, diameter, diameter);
    }

    private double calculateTotal(double[] values) {
        double total = 0;
        for (double value : values) {
            total += value;
        }
        return total;
    }

	public Color[] getColors() {
		return colors;
	}
}

public class PieChart extends JFrame {
    private static final long serialVersionUID = 1L;
    
    public PieChart(String[] labels, double[] values) {
        setTitle("Biểu đồ tròn");
        setSize(600, 500);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLayout(new BorderLayout());

        JLabel titleLabel = new JLabel("Biểu đồ phân bổ doanh thu", SwingConstants.CENTER);
        titleLabel.setFont(new Font("Tahoma", Font.BOLD, 16));
        add(titleLabel, BorderLayout.NORTH);

        PieChartPanel pieChartPanel = new PieChartPanel(labels, values);
        add(pieChartPanel, BorderLayout.CENTER);

        JPanel legendPanel = createLegendPanel(labels, values, pieChartPanel);
        add(legendPanel, BorderLayout.EAST);
    }

    private JPanel createLegendPanel(String[] labels, double[] values, PieChartPanel pieChartPanel) {
        JPanel legendPanel = new JPanel(new GridLayout(labels.length, 1, 5, 5));
        legendPanel.setBorder(BorderFactory.createTitledBorder("Chú thích"));
        legendPanel.setPreferredSize(new Dimension(200, 0));

        Color[] colors = pieChartPanel.getColors();
        double total = 0;
        for (double v : values) {
            total += v;
        }

        for (int i = 0; i < labels.length; i++) {
            JPanel itemPanel = new JPanel(new FlowLayout(FlowLayout.LEFT));
            JLabel colorLabel = new JLabel();
            colorLabel.setOpaque(true);
            colorLabel.setBackground(colors[i]);
            colorLabel.setPreferredSize(new Dimension(20, 20));
            colorLabel.setBorder(BorderFactory.createLineBorder(Color.BLACK));
            
            JLabel textLabel = new JLabel(String.format("%s: %.1f%%", labels[i], (values[i] / total) * 100));
            
            itemPanel.add(colorLabel);
            itemPanel.add(textLabel);
            legendPanel.add(itemPanel);
        }
        return legendPanel;
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(() -> {
            String[] labels = {"Sách Văn", "Sách Toán", "Sách Khoa học", "Sách Lịch sử"};
            double[] values = {10.0, 20.0, 30.0, 40.0};
            PieChart pieChart = new PieChart(labels, values);
            pieChart.setVisible(true);
        });
    }

	public void setBorder(Border lineBorder) {
		// TODO Auto-generated method stub
		
	}
}
