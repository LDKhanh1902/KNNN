package vn.DA_KNNN.Components;

import org.apache.poi.xwpf.usermodel.*;
import java.io.*;
import java.util.HashMap;
import java.util.Map;

public class ReceiptExporter {
    private String templatePath; // Đường dẫn file template Word

    public ReceiptExporter(String templatePath) {
        this.templatePath = templatePath;
    }

    /**
     * Tạo hóa đơn Word từ template với dữ liệu đầu vào.
     * @param data: Map chứa dữ liệu thay thế
     * @param outputPath: Đường dẫn file Word đầu ra
     */
    public void generateInvoice(Map<String, String> data, String outputPath) {
        try {
            // 1️⃣ Mở file Word mẫu
            FileInputStream fis = new FileInputStream(templatePath);
            XWPFDocument document = new XWPFDocument(fis);

            // 2️⃣ Thay thế dữ liệu trong đoạn văn bản
            for (XWPFParagraph paragraph : document.getParagraphs()) {
                replaceTextInParagraph(paragraph, data);
            }

            // 3️⃣ Thay thế dữ liệu trong bảng (Xử lý tất cả các bảng)
            for (XWPFTable table : document.getTables()) {
                for (XWPFTableRow row : table.getRows()) {
                    for (XWPFTableCell cell : row.getTableCells()) {
                        for (XWPFParagraph paragraph : cell.getParagraphs()) {
                            replaceTextInParagraph(paragraph, data);
                        }
                    }
                }
            }

            // 4️⃣ Lưu file mới sau khi thay thế dữ liệu
            FileOutputStream fos = new FileOutputStream(outputPath);
            document.write(fos);
            fos.close();
            document.close();
            fis.close();

            System.out.println("✅ Hóa đơn đã được tạo thành công: " + outputPath);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // ✅ Hàm thay thế văn bản trong đoạn văn bản Word
    private void replaceTextInParagraph(XWPFParagraph paragraph, Map<String, String> data) {
        for (XWPFRun run : paragraph.getRuns()) {
            String text = run.getText(0);
            if (text != null) {
                for (Map.Entry<String, String> entry : data.entrySet()) {
                    text = text.replace("{{" + entry.getKey() + "}}", entry.getValue());
                }
                run.setText(text, 0);
            }
        }
    }
}
