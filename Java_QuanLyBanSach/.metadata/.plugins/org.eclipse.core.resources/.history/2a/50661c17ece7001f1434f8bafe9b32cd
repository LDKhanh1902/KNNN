package vn.DA_KNNN.Controller;

import java.sql.ResultSet;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;

import vn.DA_KNNN.Components.ColumnChart;
import vn.DA_KNNN.Components.PieChart;
import vn.DA_KNNN.Model.DataProvider;
import vn.DA_KNNN.View.RevenueView;

public class RevenueController {
	private RevenueView view;
	
	public RevenueController(RevenueView _view) {
		this.view = _view;
		
		setPieChartValue();
		setColumnChart();
	}
	
	private void setPieChartValue() {
		int i = 0;
		PieChart pie = view.getPieChart();
		String[] columns = new String[100];
		int[] values = new int[100];

		String sql = "SELECT `category`.`CategoryName`, SUM(`paydetails`.`Quantity`) AS `TotalQuantity` FROM `book` "
				+ "JOIN `category` ON `category`.`CategoryId` = `book`.`CategoryId` "
				+ "JOIN `paydetails` ON `paydetails`.`BookId` = `book`.`BookId` "
				+ "GROUP BY `category`.`CategoryName`";

		Map<String, Integer> data = getDataPayment(sql);

		if (data != null) {
			for (Map.Entry<String, Integer> entry : data.entrySet()) {
				columns[i] = entry.getKey();
				values[i] = entry.getValue();
				i++;
			}
		}
		pie.setTitle("Thể loại sách đã bán");
		pie.setColumnNames(Arrays.copyOf(columns, i));
		pie.setValues(Arrays.copyOf(values, i));

		pie.updateChart(); // ✅ Gọi để vẽ lại biểu đồ
	}

	private void setColumnChart() {
	    String sql = "SELECT MONTH(PaymentDate) AS Month, SUM(Amount) AS TotalRevenue " +
	                 "FROM payment WHERE YEAR(PaymentDate) = YEAR(CURDATE()) " +
	                 "GROUP BY MONTH(PaymentDate) ORDER BY MONTH(PaymentDate);";
	    ColumnChart column = view.getColumnChart();
	    int[] values = new int[12]; // 12 tháng

	    Map<String, Integer> data = getDataPayment(sql);

	    if (data != null) {
	        for (Map.Entry<String, Integer> entry : data.entrySet()) {
	            int month = Integer.parseInt(entry.getKey()); // Lấy tháng (1-12)
	            values[month - 1] = entry.getValue(); // Gán vào mảng theo index tháng
	        }
	    }
	    column.setTitle("Doanh thu trong năm");
	    column.setValues(values);
	    column.updateChart(); // ✅ Cập nhật biểu đồ
	}

	private void setLineChart() {
		
	}

	private Map<String, Integer> getDataPayment(String sql) {
		Map<String, Integer> data = new HashMap<String, Integer>();
		try (ResultSet rs = DataProvider.getInstance().view(sql)) {
			while (rs.next()) {
				data.put(rs.getString(1), rs.getInt(2));
			}
		} catch (Exception e) {
			// TODO: handle exception
			e.printStackTrace();
		}
		return data;
	}
}
