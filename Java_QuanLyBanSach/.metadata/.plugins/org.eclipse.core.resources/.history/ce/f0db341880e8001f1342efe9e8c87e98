package vn.DA_KNNN.Components;

import org.apache.poi.ss.usermodel.*;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

import javax.swing.table.DefaultTableModel;
import java.io.*;

public class ExcelExporter {
    public static void updateExcelTemplate(String templatePath, String outputPath, DefaultTableModel data) {
        try (FileInputStream fis = new FileInputStream(templatePath);
             Workbook workbook = new XSSFWorkbook(fis);
             FileOutputStream fos = new FileOutputStream(outputPath)) {

            Sheet sheet = workbook.getSheetAt(0); // L·∫•y sheet ƒë·∫ßu ti√™n
            int startRow = 3; // D·ªØ li·ªáu b·∫Øt ƒë·∫ßu t·ª´ d√≤ng 4 (index 3)

            for (int i = 0; i < data.getRowCount(); i++) {
                Row row = sheet.getRow(startRow + i);
                if (row == null) {
                    row = sheet.createRow(startRow + i);
                }

                for (int j = 0; j < data.getColumnCount(); j++) {
                    Cell cell = row.getCell(j);
                    if (cell == null) {
                        cell = row.createCell(j);
                    }

                    Object value = data.getValueAt(i, j);
                    if (value != null) {
                    	if (j >= 1) { // C·ªôt s·ªë: T·ªïng ƒë∆°n h√†ng, T·ªïng s·ªë l∆∞·ª£ng, Doanh thu
                    	    try {
                    	        String valueStr = value.toString().replace(",", "").trim();
                    	        if (!valueStr.isEmpty()) {
                    	            double numericValue = Double.parseDouble(valueStr);
                    	            cell.setCellValue(numericValue);
                    	            cell.setCellStyle(getNumberCellStyle(workbook));
                    	        } else {
                    	            cell.setCellValue(0); // N·∫øu kh√¥ng ph·∫£i s·ªë, g√°n gi√° tr·ªã 0
                    	        }
                    	    } catch (NumberFormatException e) {
                    	        // N·∫øu kh√¥ng th·ªÉ chuy·ªÉn ƒë·ªïi, g√°n gi√° tr·ªã chu·ªói g·ªëc
                    	        cell.setCellValue(value.toString());
                    	    }
                    	} else {
                    	    cell.setCellValue(value.toString());
                    	}

                    }
                }
            }

            // ‚úÖ K√≠ch ho·∫°t t√≠nh to√°n c√¥ng th·ª©c khi m·ªü file
            workbook.setForceFormulaRecalculation(true);

            // ‚úÖ L∆∞u file Excel sau khi c·∫≠p nh·∫≠t d·ªØ li·ªáu
            workbook.write(fos);
            System.out.println("‚úÖ C·∫≠p nh·∫≠t d·ªØ li·ªáu th√†nh c√¥ng v√†o: " + outputPath);

        } catch (IOException e) {
            e.printStackTrace();
            System.out.println("‚ùå L·ªói c·∫≠p nh·∫≠t d·ªØ li·ªáu v√†o file Excel!");
        }
    }

    // üõ† T·∫°o ki·ªÉu ƒë·ªãnh d·∫°ng s·ªë c√≥ d·∫•u ph·∫©y
    private static CellStyle getNumberCellStyle(Workbook workbook) {
        CellStyle cellStyle = workbook.createCellStyle();
        DataFormat format = workbook.createDataFormat();
        cellStyle.setDataFormat(format.getFormat("#,##0"));
        return cellStyle;
    }
}
